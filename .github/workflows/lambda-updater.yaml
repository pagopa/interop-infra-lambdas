name: Update Lambda Code

on:
  push: 
    paths:
      - 'lambdas/nodejs/**'
    branches:
      - main
      - feature/vpn-client-lambdas

env:
  ENVIRONMENT: dev
  PROJECTS_PREFIX_PATH: "lambdas/nodejs"
  DOCKER_IMAGE_PREFIX: "interop"

jobs:
  workflow_setup:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.find_updated_nodejs_projects.outputs.projects }}
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      
      - name: Check Node.js updated projects
        id: find_updated_nodejs_projects
        run: |
          set -euo pipefail
          
          BASE_REF="${{ github.event.pull_request.base.ref }}"
          HEAD_REF="${{ github.event.pull_request.head.ref }}"
          echo "BASE_REF: $BASE_REF"
          echo "HEAD_REF: $HEAD_REF"
          
          set +e
          git fetch origin $BASE_REF $HEAD_REF
          projects=$(git diff --name-only origin/$BASE_REF origin/$HEAD_REF | grep "^${{ env.PROJECTS_PREFIX_PATH }}/[^/]\+" | cut -d'/' -f3 | uniq | jq -R -s -c 'split("\n")[:-1]' )
          diff_result=$?
          set -e
          
          if [[ $diff_result != 0 ]]; then
            echo "No diff found"
            exit $diff_result
          fi

          echo "projects=$projects" >> $GITHUB_OUTPUT
          echo $projects
  
  build_push:
    name: ${{ matrix.project }}
    runs-on: ubuntu-latest
    needs: [workflow_setup]
    strategy:
      matrix:
        project: ${{ fromJson(needs.workflow_setup.outputs.projects) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2
      
      - name: (latest) Docker metadata
        id: meta_latest
        if: ${{ github.ref_type == 'branch' }}
        uses: docker/metadata-action@60a0d343a0d8a18aedee9d34e62251f752153bdb
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.DOCKER_IMAGE_PREFIX }}-${{ matrix.project }}-${{ env.ENVIRONMENT }}
          flavor: |
            latest=false
            prefix=
            suffix=
          tags: |
            type=raw,value=latest

      - name: (tag) Docker metadata
        id: meta_tag
        if: ${{ github.ref_type == 'tag' }}
        uses: docker/metadata-action@60a0d343a0d8a18aedee9d34e62251f752153bdb
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.DOCKER_IMAGE_PREFIX }}-${{ matrix.project }}-${{ env.ENVIRONMENT }}
          flavor: |
            latest=false
            prefix=
            suffix=
          tags: |
            type=ref,event=tag
            
      - name: Build and push Docker image
        id: build_push
        uses: docker/build-push-action@a8d35412fb758de9162fd63e3fa3f0942bdedb4d
        with:
          context: ${{ env.PROJECTS_PREFIX_PATH }}/${{ matrix.project }}
          file: ${{ env.PROJECTS_PREFIX_PATH }}/${{ matrix.project }}/Dockerfile
          push: true
          tags: ${{ github.ref_type == 'branch' && steps.meta_latest.outputs.tags || steps.meta_tag.outputs.tags }}
          labels: ${{ github.ref_type == 'branch' && steps.meta_latest.outputs.labels || steps.meta_tag.outputs.labels }}
